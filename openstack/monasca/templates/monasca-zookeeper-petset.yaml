apiVersion: apps/v1alpha1
kind: PetSet
metadata:
  name: zoo
  namespace: monasca
  labels:
    system: openstack
    service: monitoring
    component: zk
spec:
  serviceName: "zk"
  replicas: {{.Values.monasca_zookeeper_endpoints}}
  template:
    metadata:
      labels:
        component: zk
      annotations:
        checksum/monasca-templates-monasca-etc-base.yaml: "dummy"
        checksum/monasca-templates-monasca-bin.yaml: "dummy"
        pod.alpha.kubernetes.io/initialized: "true"
        pod.alpha.kubernetes.io/init-containers: '[
            {
                "name": "init",
                "image": "{{.Values.docker_repo}}/monasca-zookeeper-cluster:{{.Values.image_version_monasca_zookeeper}}",
                "imagePullPolicy": "IfNotPresent",
                "command": ["/usr/local/bin/dumb-init"],
                "args": ["/peer-finder","-on-start=\"/on-start.sh\"","-service=zk","-domain={{.Values.monasca_cluster}}"],
                "env": [
                  {
                      "name": "POD_NAMESPACE",
                      "valueFrom": {
                          "fieldRef": {
                              "apiVersion": "v1",
                              "fieldPath": "metadata.namespace"
                          }
                      }
                   }
                ],
                "volumeMounts": [
                    {
                        "name": "confdir",
                        "mountPath": "/conf-dir"
                    },
                    {
                        "name": "datadir",
                        "mountPath": "/var/lib/zookeeper"
                    }
                ]
            }
        ]'
    spec:
      nodeSelector:
        zone: farm
      containers:
        - name: zk
          image: {{.Values.docker_repo}}/monasca-zookeeper-cluster:{{.Values.image_version_monasca_zookeeper}}
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: {{.Values.monasca_zookeeper_port_follower}}
            name: peer
          - containerPort: {{.Values.monasca_zookeeper_port_leader}}
            name: leader-election
          - containerPort: {{.Values.monasca_zookeeper_port_internal}}
            name: client
          command:
            - /usr/local/bin/dumb-init
          args:
            - /usr/local/bin/kubernetes-entrypoint
          env:
            - name: COMMAND
              value: "/opt/zookeeper/bin/zkServer.sh --config /conf-dir start-foreground"
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "echo config|nc localhost 2181|grep -q $HOSTNAME"
            timeoutSeconds: 5
            initialDelaySeconds: 60
            periodSeconds: 60
          # this readinessProbe is essential for the cluster to form properly (if the nodes are exposed too early or late, dynamic configuration breaks somehow)
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "echo ruok | nc 127.0.0.1 {{.Values.monasca_zookeeper_port_internal}} | grep -w -q imok"
            # do not increase this number, it just extends the not-ready period
            initialDelaySeconds: 15
            timeoutSeconds: 5
          volumeMounts:
            - name: datadir
              mountPath: /var/lib/zookeeper
            - name: confdir
              mountPath: /conf-dir
      volumes:
      - name: confdir
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: datadir
      namespace: monasca
    spec:
      accessModes: [ "ReadWriteMany" ]
      resources:
        requests:
          storage: 50Gi
