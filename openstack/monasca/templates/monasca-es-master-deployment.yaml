kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: es-master
  namespace: monasca
  labels:
    system: openstack
    service: monitoring
    component: elasticsearch
    role: master
  annotations:
    kubernetes.io/change-cause: {{.Values.cluster_deployment_reason}}

spec:
  replicas: {{.Values.monasca_elasticsearch_master_replicas}}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: {{.Values.monasca_elasticsearch_master_replicas}}
  template:
    metadata:
      labels:
        component: elasticsearch
        role: master
      annotations:
        checksum/monasca-templates-monasca-es-etc-configmap.yaml: {{ include "monasca/templates/monasca-es-etc-configmap.yaml" . | sha256sum }}
        checksum/monasca-templates-monasca-es-bin-configmap.yaml: {{ include "monasca/templates/monasca-es-bin-configmap.yaml" . | sha256sum }}
        pod.beta.kubernetes.io/init-containers: '[
          {
          "name": "sysctl",
            "image": "busybox",
            "imagePullPolicy": "IfNotPresent",
            "command": ["sysctl", "-w", "vm.max_map_count=262144"],
            "securityContext": {
              "privileged": true
            }
          }
        ]'
    spec:
      nodeSelector:
        zone: farm
      volumes:
        - name: monasca-bin
          configMap:
            name: monasca-es-bin
        - name: monasca-etc
          configMap:
            name: monasca-es-etc
      containers:
      - name: es-master
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
              - SYS_RESOURCE
        image: {{.Values.docker_repo}}/monasca-elasticsearch:{{.Values.image_version_monasca_elasticsearch}}
        imagePullPolicy: IfNotPresent
        command:
          - /usr/local/bin/dumb-init
        args:
          - /usr/local/bin/kubernetes-entrypoint
        env:
          - name: COMMAND
            value: "/bin/bash /monasca-bin/elasticsearch-start"
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: KUBERNETES_CA_CERTIFICATE_FILE
            value: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          - name: NODE_MASTER
            value: "true"
          - name: NODE_DATA
            value: "false"
          - name: NODE_INGEST
            value: "false"
          - name: HTTP_ENABLE
            value: "true"
        volumeMounts:
          - mountPath: /monasca-bin
            name: monasca-bin
          - mountPath: /monasca-etc
            name: monasca-etc
        ports:
          - containerPort: {{.Values.monasca_elasticsearch_port_cluster}}
            name: transport
            protocol: TCP
          - name: dummymasterport
            hostPort: {{.Values.monasca_elasticsearch_master_dummy_port}}
            containerPort: {{.Values.monasca_elasticsearch_master_dummy_port}}
      - name: monasca-agent-forwarder
        image: {{.Values.docker_repo}}/monasca-agent:{{.Values.image_version_monasca_agent}}
        imagePullPolicy: IfNotPresent
        command:
          - /usr/local/bin/dumb-init
        args:
          - /usr/local/bin/kubernetes-entrypoint
        env:
          - name: COMMAND
            value: "/bin/bash /monasca-bin/agent-forwarder-start"
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MONASCA_AGENT_SERVICE_DEFAULT
            value: "monitoring"
          - name: MONASCA_AGENT_COMPONENT_DEFAULT
            value: "elasticsearch-master"
        ports:
          - containerPort: {{.Values.monasca_agent_port_forwarder}}
            name: forwarder
        volumeMounts:
          - mountPath: /monasca-bin
            name: monasca-bin
          - mountPath: /monasca-etc
            name: monasca-etc
      - name: monasca-agent-collector
        image: {{.Values.docker_repo}}/monasca-agent:{{.Values.image_version_monasca_agent}}
        imagePullPolicy: IfNotPresent
        command:
          - /usr/local/bin/dumb-init
        args:
          - /usr/local/bin/kubernetes-entrypoint
        env:
          - name: COMMAND
            value: "/bin/bash /monasca-bin/agent-collector-start"
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: DEPENDENCY_CONTAINER
            value: "monasca-agent-forwarder"
          - name: MONASCA_AGENT_CHECKS
            value: "elastic"
        volumeMounts:
          - mountPath: /monasca-bin
            name: monasca-bin
          - mountPath: /monasca-etc
            name: monasca-etc
