apiVersion: apps/v1alpha1
kind: PetSet
metadata:
  name: mysql
  namespace: monasca
  labels:
    system: openstack
    service: monitoring
    component: mysql
  annotations:
    kubernetes.io/change-cause: {{.Values.cluster_deployment_reason}}

spec:
  serviceName: "mysql"
  replicas: 1
  template:
    metadata:
      labels:
        component: mysql
      annotations:
        checksum/monasca-templates-monasca-etc-base.yaml: "dummy"
        checksum/monasca-templates-monasca-bin.yaml: "dummy"
        pod.alpha.kubernetes.io/init-containers: '[
            {
                "name": "init",
                "image": "{{.Values.docker_repo}}/monasca-mysql:{{.Values.image_version_monasca_mysql}}",
                "imagePullPolicy": "IfNotPresent",
                "command": ["/usr/local/bin/dumb-init"],
                "args": ["/bin/bash","/monasca-bin/mysql-init"],
                "volumeMounts": [
                    {
                        "name": "datadir",
                        "mountPath": "/var/lib/mysql"
                    },
                    {
                        "name": "monasca-bin",
                        "mountPath": "/monasca-bin"
                    },
                    {
                        "name": "monasca-etc-base",
                        "mountPath": "/monasca-etc-base"
                    },
                    {
                        "name": "logdir",
                        "mountPath": "/var/log/mysql"
                    }
                ]
            }
        ]'
    spec:
      nodeSelector:
        zone: farm
      terminationGracePeriodSeconds: 600
      volumes:
        - name: monasca-bin
          configMap:
            name: monasca-bin
        - name: monasca-etc-base
          configMap:
            name: monasca-etc-base
        - name: logdir
          emptyDir: {}
      containers:
        - name: mysql
          image: {{.Values.docker_repo}}/monasca-mysql:{{.Values.image_version_monasca_mysql}}
          imagePullPolicy: IfNotPresent
          command:
            - /usr/local/bin/dumb-init
          args:
            - /usr/local/bin/kubernetes-entrypoint
          env:
            - name: COMMAND
              value: "chpst -L /var/lib/mysql/container.lock mysqld_safe --defaults-extra-file=/monasca-etc-base/mysql-mysql.cnf --init-file=/monasca-etc-base/mysql-mon-customizing.sql --skip-syslog --log-error=/var/log/mysql/mysql-error.log"
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
#          command:
#            - /bin/bash
#          args:
#            - -c
#            - "while true; do sleep 10000; done"
          ports:
            - name: mysql
              containerPort: {{.Values.monasca_mysql_port_internal}}
          volumeMounts:
            - name: datadir
              mountPath: /var/lib/mysql
            - name: monasca-bin
              mountPath: /monasca-bin
            - name: monasca-etc-base
              mountPath: /monasca-etc-base
            - name: logdir
              mountPath: /var/log/mysql
          lifecycle:
            preStop:
              exec:
                command: 
                  - /bin/bash
                  - /monasca-bin/mysql-stop
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - /monasca-bin/mysql-liveness
            timeoutSeconds: 30
            initialDelaySeconds: 120
        - name: fluent
          image: {{.Values.docker_repo}}/monasca-fluent:{{.Values.image_version_monasca_fluent}}
          imagePullPolicy: IfNotPresent
          command:
            - /usr/local/bin/dumb-init
          args:
            - /usr/local/bin/kubernetes-entrypoint
          env:
            - name: COMMAND
              value: "/usr/local/bin/fluentd --use-v1-config -c /monasca-etc-base/mysql-fluent.conf"
            - name: NODE_TYPE
              value: "mysql"
          volumeMounts:
            - name: monasca-bin
              mountPath: /monasca-bin
            - name: monasca-etc-base
              mountPath: /monasca-etc-base
            - name: logdir
              mountPath: /var/log/mysql
  volumeClaimTemplates:
  - metadata:
      name: datadir
      namespace: monasca
    spec:
      accessModes: [ "ReadWriteMany" ]
      resources:
        requests:
          storage: 10Gi
