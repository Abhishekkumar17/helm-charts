apiVersion: extensions/v1beta1
kind: Deployment

metadata:
  name: ceilometer-rabbitmq
  namespace: ceilometer
  labels:
    system: openstack
    component: metering

spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
  template:
    metadata:
      annotations:
        checksum/ceilometer-templates-ceilometer-bin-configmap.yaml: {{ include "ceilometer/templates/ceilometer-bin-configmap.yaml" . | sha256sum }}
#        checksum/ceilometer-templates-bin-_rabbitmq-start.tpl: {{ include "ceilometer/templates/bin/_rabbitmq-start.tpl" . | sha256sum }}
#        checksum/ceilometer-templates-bin-_rabbitmq-prereq.tpl: {{ include "ceilometer/templates/bin/_rabbitmq-prereq.tpl" . | sha256sum }}
#        checksum/ceilometer-templates-bin-_rabbitmq-liveness.tpl: {{ include "ceilometer/templates/bin/_rabbitmq-liveness.tpl" . | sha256sum }}
#        checksum/ceilometer-templates-bin-static-_common-start.tpl: {{ include "ceilometer/templates/bin-static/_common-start.tpl" . | sha256sum }}
#        checksum/ceilometer-templates-bin-static-_rabbitmq-stop.tpl: {{ include "ceilometer/templates/bin-static/_rabbitmq-stop.tpl" . | sha256sum }}
      labels:
        component: ceilometer-rabbitmq
    spec:
      nodeSelector:
        zone: farm
      volumes:
        - name: openstack-kube
          gitRepo:
            repository: {{.Values.cluster_configuration_repository}}
            revision: {{.Values.cluster_configuration_revision}}
        - name: ceilometer-rabbitmq-persistent-storage
          persistentVolumeClaim:
            claimName: ceilometer-rabbitmq-pvclaim
        - name: container-init
          configMap:
            name: ceilometer-bin
        - name: ceilometer-etc
          configMap:
            name: ceilometer-etc
      containers:
        - name: ceilometer-rabbitmq
          image: {{.Values.docker_repo}}/ceilometer-rabbitmq:{{.Values.image_version_ceilometer_rabbitmq}}
# the above line is a container, which in the end just wraps that container below to still work well with the kubedeploy script for now
#          image: rabbitmq:3-management
          imagePullPolicy: IfNotPresent
# this is required to give the pods ip to the inside, where it is needed for an /etc/hosts entry
          env:
          - name: CEILOMETER_RABBITMQ_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
# Comment out dumb-init for now, as we are switching to the standard non-Kolla "rabbitmq:3-management" image
# in order to get things working with it like in the openstack rabbitmq case
#          command:
#            - /usr/local/bin/dumb-init
#          args:
#            - /bin/bash
#            - /ceilometer-bin/rabbitmq-start
          command:
            - /openstack-kube/openstack-kube/scripts/_container_init
          args:
            - rabbitmq-start
#          command:
#            - /bin/bash
#          args:
#            - -c
#            - "while true; do sleep 1000; done"
          ports:
            - name: rabbitmq
              containerPort: {{.Values.ceilometer_rabbitmq_port_public}}
            - name: rabbitmq-mgmt
              containerPort: {{.Values.ceilometer_rabbitmq_port_mgmt}}
          volumeMounts:
            - mountPath: /openstack-kube
              name: openstack-kube
            - name: ceilometer-rabbitmq-persistent-storage
              mountPath: /var/lib/rabbitmq
              readOnly: false
            - mountPath: /container.init
              name: container-init
            - mountPath: /ceilometer-etc
              name: ceilometer-etc
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/bash
                  - /container.init/rabbitmq-stop
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - /container.init/rabbitmq-liveness
            timeoutSeconds: 30
            initialDelaySeconds: 120
