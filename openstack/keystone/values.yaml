# Default values for keystone.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value

global:
  tld: cloud.sap
  region: cluster
# imageRegistry: hub.global.cloud.sap

debug: False

keystone:
  image: "monsoon/ubuntu-source-keystone"
  imageTag: "20170530084852"
  ## Specify a imagePullPolicy
  ## 'Always' if imageTag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  # imagePullPolicy:

  resources:
    enabled: false
    limits:
      memory: 128Mi
      cpu: 500m
    requests:
      memory: 128Mi
      cpu: 500m

  adminUser: admin
  adminPassword: secret
  adminProjectName: admin
#  cloudAdminProject: put-your-cloud-admin-project-id-here

metrics:
  enabled: false
  port: '9102'

  image: prom/statsd-exporter
  imageTag: master
  prefix: openstack

  resources:
    enabled: false
    limits:
      memory: 128Mi
      cpu: 500m
    requests:
      memory: 128Mi
      cpu: 500m


operations:
  image: "monsoon/ubuntu-source-keystone"
  imageTag: "20170530084852"
  ## Specify a imagePullPolicy
  ## 'Always' if imageTag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  # imagePullPolicy:

  cronSchedule: "0 * * * *"

  resources:
    enabled: false
    limits:
      memory: 128Mi
      cpu: 500m
    requests:
      memory: 128Mi
      cpu: 500m

replicas: 2

upgrades:
  revisionHistory: 3
  podReplacementStrategy: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 3


services:
  type: ClusterIP
#  externalip: "192.168.1.100"

  ingress:
    enabled: false
    # see https://github.com/kubernetes/ingress/blob/74d57c950282484885a74c92d3413110e3b95c69/controllers/nginx/configuration.md#rate-limiting
  # limitRps: 100
  # limitConnections: 100

  public:
    scheme: http
    host: identity.cluster.cloud.sap
    port: 5000
    #tlsCertificate:
    #tlsKey:

  admin:
    scheme: http
    host: identity-admin.cluster.cloud.sap
    port: 35357
    #tlsCertificate:
    #tlsKey:

notifications:
  enabled: true
  format: cadf
  opt_out:
    - identity.authenticate

rabbitmq:
  host: rabbitmq
  user: openstack
  password: secret

token:
  provider: fernet
  expiration: 3600

fernet:
  maxActiveKeys: 3
  secrets:
  - c1dVSlFZVjRQRnBGR3pwSk1nMll6eEFwX2VDNURwRFVzLVd5aEVYaVI1dz0=
  - M1V0dHp6bk5LYzVlQ1doMjdvUUctSGdmVFFEcWxIeDZXdHFDT25vT3RHUT0=


memcached:
  port: 11211

sentry:
  enabled: false
# dsn: put-your-sentry-dsn-here

postgresql:
  postgresDatabase: keystone
  postgresUser: postgres
  postgresPassword: secret

  dbUser: keystone
  dbPassword: anotherSecret

  dbInit: keystone-db-init
  dbMaintain: keystone-db-maintain

  persistence:
    enabled: false

  backup:
    enabled: false

  metrics:
    enabled: true
    customMetrics:
      pg_database:
        query: "SELECT d.datname AS datname, CASE WHEN pg_catalog.has_database_privilege(d.datname, 'CONNECT') THEN pg_catalog.pg_database_size(d.datname) ELSE 0 END AS size_bytes FROM pg_catalog.pg_database d where datname not in ('template0', 'template1', 'postgres')"
        metrics:
          - datname:
              usage: "LABEL"
              description: "Name of the database"
          - size_bytes:
              usage: "GAUGE"
              description: "Size of the database in bytes"
      openstack_roles_total:
        query: "SELECT COUNT(*) as gauge FROM role"
        metrics:
          - gauge:
              usage: "GAUGE"
              description: "Total keystone role count"
      openstack_users_total:
        query: "SELECT COUNT(*) as gauge FROM id_mapping WHERE entity_type = 'user'"
        metrics:
          - gauge:
              usage: "GAUGE"
              description: "Total keystone user count"
      openstack_groups_total:
        query: "SELECT COUNT(*) as gauge FROM id_mapping WHERE entity_type = 'group'"
        metrics:
          - gauge:
              usage: "GAUGE"
              description: "Total keystone group count"
      openstack_domains_total:
        query: "SELECT COUNT(*) - 1 as gauge FROM project WHERE domain_id = '<<keystone.domain.root>>'"
        metrics:
          - gauge:
              usage: "GAUGE"
              description: "Total keystone domain count"
      openstack_projects_total:
        query: "SELECT COUNT(*) as gauge FROM project WHERE domain_id != '<<keystone.domain.root>>'"
        metrics:
          - gauge:
              usage: "GAUGE"
              description: "Total keystone project count"
      openstack_assignments_total:
        query: "SELECT COUNT(*) as gauge FROM assignment"
        metrics:
          - gauge:
              usage: "GAUGE"
              description: "Total keystone role-assignment count"
      openstack_revocations_total:
        query: "SELECT COUNT(*) as gauge FROM revocation_event"
        metrics:
          - gauge:
              usage: "GAUGE"
              description: "Total keystone token revocation count"

