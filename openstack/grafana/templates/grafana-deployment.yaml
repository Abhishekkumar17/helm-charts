apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: grafana
  namespace: grafana
  labels:
    system: openstack
    service: monitoring
    component: grafana
spec:
  replicas: 1
  template:
    metadata:
      labels:
        component: grafana
      annotations:
        checksum/grafana.etc: {{ include "grafana/templates/grafana-etc-configmap.yaml" . | sha256sum }}
        checksum/grafana.bin: {{ include "grafana/templates/grafana-bin-configmap.yaml" . | sha256sum }}
        checksum/grafana.ini: {{ include "grafana/templates/_grafana.ini.tpl" . | sha256sum }}
        checksum/ldap.toml: {{ include "grafana/templates/_ldap.toml.tpl" . | sha256sum }}
        checksum/grafana-start: {{ include "grafana/templates/_grafana-start.tpl" . | sha256sum }}
        pod.alpha.kubernetes.io/initialized: "true"
    spec:
      nodeSelector:
        zone: farm
      volumes:
        - name: grafana-content
          gitRepo:
            repository: {{.Values.cluster.content.repository}}
            revision: {{.Values.cluster.content.revision}}
        - name: grafana-bin
          configMap:
            name: grafana-bin
        - name: grafana-etc
          configMap:
            name: grafana-etc
        - name: datadir
          emptyDir: {}
      containers:
        - name: "grafana"
          image: "grafana/grafana:latest"
          imagePullPolicy: {{.Values.image.pullPolicy}}
          command:
            - /bin/bash
          args:
            - /grafana-bin/grafana-start
          ports:
            - name: nodejs
              containerPort: 3000
          volumeMounts:
{{- if .Values.persistence.enabled }}
            - name: datadir
              mountPath: /var/lib/grafana
              readOnly: false
{{- end }}
            - mountPath: /grafana-content
              name: grafana-content
            - mountPath: /grafana-bin
              name: grafana-bin
            - mountPath: /grafana-etc
              name: grafana-etc

{{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: datadir
      annotations:
        volume.alpha.kubernetes.io/storage-class: anything
    spec:
      accessModes: [ "ReadWriteMany" ]
      resources:
        requests:
          storage: 1Gi
{{- end }}
