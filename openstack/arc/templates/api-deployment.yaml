kind: Deployment
apiVersion: extensions/v1beta1

metadata:
  name: arc-api
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"

spec:
  replicas: {{ .Values.api.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
  template:
    metadata:
      labels:
        app: arc-api
    spec:
      volumes:
        - name: api-transport-credentials
          emptyDir: {}
      containers:
        - name: api
          image: {{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - name: api
              containerPort: {{ .Values.api.service.internalPort }}
          readinessProbe:
            httpGet:
              path: /readiness
              port: {{ .Values.api.service.internalPort }}
            initialDelaySeconds: 5
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: {{ .Values.api.service.internalPort }}
            initialDelaySeconds: 20
            timeoutSeconds: 5
          env:
            - name: ARC_LISTEN
              value: 0.0.0.0:{{ .Values.api.service.internalPort }}
            - name: ARC_ENV
              value: production
            - name: ARC_ENDPOINT
              value: tls://mosquitto:8883
            - name: ARC_TLS_CA_CERT
              value: /etc/api/transport_CA.crt
            - name: ARC_TLS_CLIENT_CERT
              value: /etc/api/transport.crt
            - name: ARC_TLS_CLIENT_KEY
              value: /etc/api/transport.key
            - name: ARC_LOG_LEVEL
              value: {{ .Values.logLevel }}
            - name: COMMON_NAME # use pod name as common name
              valueFrom: { fieldRef: { fieldPath: metadata.name } }
            - name: DBUSER
              value: postgres
            - name: DBHOST
              value: {{ template "postgresql.fullname" . }}
            - name: DBPASSWORD
              valueFrom: { secretKeyRef:    { name: {{ template "postgresql.fullname" . }}, key: postgres-password } }
            - name: ARC_KEYSTONE_ENDPOINT
              value: {{ .Values.keystoneEndpoint }}
          volumeMounts:
            - name: api-transport-credentials
              mountPath: /etc/api


